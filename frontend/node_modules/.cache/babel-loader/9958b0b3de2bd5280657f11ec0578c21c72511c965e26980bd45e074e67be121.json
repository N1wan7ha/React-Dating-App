{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { MessageCircle, Heart, X } from 'lucide-react';\n// import Navbar from './Navbar';\n// import {\n//   Tabs,\n//   TabsContent,\n//   TabsList,\n//   TabsTrigger,\n// } from \"@/components/ui/tabs\";\n// import { Card, CardContent } from \"@/components/ui/card\";\n\n// const MatchesPage = () => {\n//   const [matches, setMatches] = useState([]);\n//   const [likes, setLikes] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     fetchMatches();\n//     fetchLikes();\n//   }, []);\n\n//   const fetchMatches = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('http://localhost:5000/users/matches', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (!response.ok) throw new Error('Failed to fetch matches');\n//       const data = await response.json();\n//       setMatches(data);\n//     } catch (err) {\n//       setError('Error loading matches');\n//       console.error('Error:', err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const fetchLikes = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('http://localhost:5000/users/likes', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (!response.ok) throw new Error('Failed to fetch likes');\n//       const data = await response.json();\n//       setLikes(data);\n//     } catch (err) {\n//       setError('Error loading likes');\n//       console.error('Error:', err);\n//     }\n//   };\n\n//   const ProfileCard = ({ profile, type }) => (\n//     <Card className=\"w-full max-w-sm bg-white rounded-lg overflow-hidden shadow-lg transition-transform hover:scale-105\">\n//       <CardContent className=\"p-0\">\n//         <div className=\"relative\">\n//           <img\n//             src={profile.image || \"/api/placeholder/400/320\"}\n//             alt={profile.name}\n//             className=\"w-full h-48 object-cover\"\n//             onError={(e) => {\n//               e.target.onerror = null;\n//               e.target.src = \"/api/placeholder/400/320\";\n//             }}\n//           />\n//           <div className=\"absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/60 to-transparent\">\n//             <h3 className=\"text-xl font-bold text-white\">{profile.name}, {profile.age}</h3>\n//           </div>\n//         </div>\n\n//         <div className=\"p-4 space-y-3\">\n//           <p className=\"text-gray-600 text-sm\">{profile.bio}</p>\n\n//           <div className=\"flex flex-wrap gap-2\">\n//             {profile.interests?.map((interest, idx) => (\n//               <span \n//                 key={idx} \n//                 className=\"px-2 py-1 text-xs bg-purple-100 text-purple-600 rounded-full\"\n//               >\n//                 {interest}\n//               </span>\n//             ))}\n//           </div>\n\n//           <div className=\"flex justify-between items-center pt-3\">\n//             {type === 'match' ? (\n//               <button className=\"flex items-center gap-2 px-4 py-2 bg-purple-500 text-white rounded-full hover:bg-purple-600 transition-colors\">\n//                 <MessageCircle size={18} />\n//                 Message\n//               </button>\n//             ) : (\n//               <div className=\"flex items-center gap-2 text-gray-500\">\n//                 <Heart size={18} className=\"fill-current text-pink-500\" />\n//                 <span className=\"text-sm\">Liked</span>\n//               </div>\n//             )}\n//             <span className=\"text-xs text-gray-400\">\n//               {type === 'match' ? 'Matched!' : 'Waiting for response...'}\n//             </span>\n//           </div>\n//         </div>\n//       </CardContent>\n//     </Card>\n//   );\n\n//   if (loading) {\n//     return (\n//       <div className=\"min-h-screen bg-gradient-to-b from-pink-400 via-purple-400 to-purple-300\">\n//         <Navbar />\n//         <div className=\"flex justify-center items-center h-[calc(100vh-64px)]\">\n//           <div className=\"text-white text-xl\">Loading...</div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   if (error) {\n//     return (\n//       <div className=\"min-h-screen bg-gradient-to-b from-pink-400 via-purple-400 to-purple-300\">\n//         <Navbar />\n//         <div className=\"flex justify-center items-center h-[calc(100vh-64px)]\">\n//           <div className=\"text-white text-xl\">{error}</div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-b from-pink-400 via-purple-400 to-purple-300\">\n//       <Navbar />\n\n//       <div className=\"container mx-auto px-4 py-8\">\n//         <Tabs defaultValue=\"matches\" className=\"w-full\">\n//           <TabsList className=\"w-full max-w-md mx-auto mb-8\">\n//             <TabsTrigger value=\"matches\" className=\"w-1/2\">\n//               <div className=\"flex items-center gap-2\">\n//                 <MessageCircle size={18} />\n//                 Matches ({matches.length})\n//               </div>\n//             </TabsTrigger>\n//             <TabsTrigger value=\"likes\" className=\"w-1/2\">\n//               <div className=\"flex items-center gap-2\">\n//                 <Heart size={18} />\n//                 Likes ({likes.length})\n//               </div>\n//             </TabsTrigger>\n//           </TabsList>\n\n//           <TabsContent value=\"matches\">\n//             {matches.length === 0 ? (\n//               <div className=\"text-center py-12\">\n//                 <div className=\"w-24 h-24 mx-auto mb-4 bg-white rounded-full flex items-center justify-center\">\n//                   <MessageCircle size={40} className=\"text-gray-400\" />\n//                 </div>\n//                 <h3 className=\"text-xl font-semibold text-white mb-2\">No matches yet</h3>\n//                 <p className=\"text-white/80\">Keep swiping to find your match!</p>\n//               </div>\n//             ) : (\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//                 {matches.map(match => (\n//                   <ProfileCard key={match.id} profile={match} type=\"match\" />\n//                 ))}\n//               </div>\n//             )}\n//           </TabsContent>\n\n//           <TabsContent value=\"likes\">\n//             {likes.length === 0 ? (\n//               <div className=\"text-center py-12\">\n//                 <div className=\"w-24 h-24 mx-auto mb-4 bg-white rounded-full flex items-center justify-center\">\n//                   <Heart size={40} className=\"text-gray-400\" />\n//                 </div>\n//                 <h3 className=\"text-xl font-semibold text-white mb-2\">No likes yet</h3>\n//                 <p className=\"text-white/80\">Your likes will appear here</p>\n//               </div>\n//             ) : (\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//                 {likes.map(like => (\n//                   <ProfileCard key={like.id} profile={like} type=\"like\" />\n//                 ))}\n//               </div>\n//             )}\n//           </TabsContent>\n//         </Tabs>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MatchesPage;","map":{"version":3,"names":[],"sources":["/home/sithumal/Desktop/projects/Dating App/frontend/src/components/Matches.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { MessageCircle, Heart, X } from 'lucide-react';\n// import Navbar from './Navbar';\n// import {\n//   Tabs,\n//   TabsContent,\n//   TabsList,\n//   TabsTrigger,\n// } from \"@/components/ui/tabs\";\n// import { Card, CardContent } from \"@/components/ui/card\";\n\n// const MatchesPage = () => {\n//   const [matches, setMatches] = useState([]);\n//   const [likes, setLikes] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     fetchMatches();\n//     fetchLikes();\n//   }, []);\n\n//   const fetchMatches = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('http://localhost:5000/users/matches', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (!response.ok) throw new Error('Failed to fetch matches');\n//       const data = await response.json();\n//       setMatches(data);\n//     } catch (err) {\n//       setError('Error loading matches');\n//       console.error('Error:', err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const fetchLikes = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('http://localhost:5000/users/likes', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (!response.ok) throw new Error('Failed to fetch likes');\n//       const data = await response.json();\n//       setLikes(data);\n//     } catch (err) {\n//       setError('Error loading likes');\n//       console.error('Error:', err);\n//     }\n//   };\n\n//   const ProfileCard = ({ profile, type }) => (\n//     <Card className=\"w-full max-w-sm bg-white rounded-lg overflow-hidden shadow-lg transition-transform hover:scale-105\">\n//       <CardContent className=\"p-0\">\n//         <div className=\"relative\">\n//           <img\n//             src={profile.image || \"/api/placeholder/400/320\"}\n//             alt={profile.name}\n//             className=\"w-full h-48 object-cover\"\n//             onError={(e) => {\n//               e.target.onerror = null;\n//               e.target.src = \"/api/placeholder/400/320\";\n//             }}\n//           />\n//           <div className=\"absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/60 to-transparent\">\n//             <h3 className=\"text-xl font-bold text-white\">{profile.name}, {profile.age}</h3>\n//           </div>\n//         </div>\n        \n//         <div className=\"p-4 space-y-3\">\n//           <p className=\"text-gray-600 text-sm\">{profile.bio}</p>\n          \n//           <div className=\"flex flex-wrap gap-2\">\n//             {profile.interests?.map((interest, idx) => (\n//               <span \n//                 key={idx} \n//                 className=\"px-2 py-1 text-xs bg-purple-100 text-purple-600 rounded-full\"\n//               >\n//                 {interest}\n//               </span>\n//             ))}\n//           </div>\n\n//           <div className=\"flex justify-between items-center pt-3\">\n//             {type === 'match' ? (\n//               <button className=\"flex items-center gap-2 px-4 py-2 bg-purple-500 text-white rounded-full hover:bg-purple-600 transition-colors\">\n//                 <MessageCircle size={18} />\n//                 Message\n//               </button>\n//             ) : (\n//               <div className=\"flex items-center gap-2 text-gray-500\">\n//                 <Heart size={18} className=\"fill-current text-pink-500\" />\n//                 <span className=\"text-sm\">Liked</span>\n//               </div>\n//             )}\n//             <span className=\"text-xs text-gray-400\">\n//               {type === 'match' ? 'Matched!' : 'Waiting for response...'}\n//             </span>\n//           </div>\n//         </div>\n//       </CardContent>\n//     </Card>\n//   );\n\n//   if (loading) {\n//     return (\n//       <div className=\"min-h-screen bg-gradient-to-b from-pink-400 via-purple-400 to-purple-300\">\n//         <Navbar />\n//         <div className=\"flex justify-center items-center h-[calc(100vh-64px)]\">\n//           <div className=\"text-white text-xl\">Loading...</div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   if (error) {\n//     return (\n//       <div className=\"min-h-screen bg-gradient-to-b from-pink-400 via-purple-400 to-purple-300\">\n//         <Navbar />\n//         <div className=\"flex justify-center items-center h-[calc(100vh-64px)]\">\n//           <div className=\"text-white text-xl\">{error}</div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-b from-pink-400 via-purple-400 to-purple-300\">\n//       <Navbar />\n      \n//       <div className=\"container mx-auto px-4 py-8\">\n//         <Tabs defaultValue=\"matches\" className=\"w-full\">\n//           <TabsList className=\"w-full max-w-md mx-auto mb-8\">\n//             <TabsTrigger value=\"matches\" className=\"w-1/2\">\n//               <div className=\"flex items-center gap-2\">\n//                 <MessageCircle size={18} />\n//                 Matches ({matches.length})\n//               </div>\n//             </TabsTrigger>\n//             <TabsTrigger value=\"likes\" className=\"w-1/2\">\n//               <div className=\"flex items-center gap-2\">\n//                 <Heart size={18} />\n//                 Likes ({likes.length})\n//               </div>\n//             </TabsTrigger>\n//           </TabsList>\n\n//           <TabsContent value=\"matches\">\n//             {matches.length === 0 ? (\n//               <div className=\"text-center py-12\">\n//                 <div className=\"w-24 h-24 mx-auto mb-4 bg-white rounded-full flex items-center justify-center\">\n//                   <MessageCircle size={40} className=\"text-gray-400\" />\n//                 </div>\n//                 <h3 className=\"text-xl font-semibold text-white mb-2\">No matches yet</h3>\n//                 <p className=\"text-white/80\">Keep swiping to find your match!</p>\n//               </div>\n//             ) : (\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//                 {matches.map(match => (\n//                   <ProfileCard key={match.id} profile={match} type=\"match\" />\n//                 ))}\n//               </div>\n//             )}\n//           </TabsContent>\n\n//           <TabsContent value=\"likes\">\n//             {likes.length === 0 ? (\n//               <div className=\"text-center py-12\">\n//                 <div className=\"w-24 h-24 mx-auto mb-4 bg-white rounded-full flex items-center justify-center\">\n//                   <Heart size={40} className=\"text-gray-400\" />\n//                 </div>\n//                 <h3 className=\"text-xl font-semibold text-white mb-2\">No likes yet</h3>\n//                 <p className=\"text-white/80\">Your likes will appear here</p>\n//               </div>\n//             ) : (\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//                 {likes.map(like => (\n//                   <ProfileCard key={like.id} profile={like} type=\"like\" />\n//                 ))}\n//               </div>\n//             )}\n//           </TabsContent>\n//         </Tabs>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MatchesPage;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}